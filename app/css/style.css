@import url("backgroundAnimation.css");
@import url("bubbleAnimation.css");
@import url("UiComponent.css");
@import url("config.css");
@import url("addFile.css");
@import url("addTestingButton.css");
@import url("fileManager.css");
@import url("activeFileStack.css");
@import url("menu.css");
@import url("settings.css");
@import url("UiComponent.css");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

html,
body {
  width: 100%;
  height: 100%;
  position: relative;
}

.hide {
  display: none;
}

.console {
  height: 100%;
  width: 100%;
  display: flex;
  padding: 10px 10px 10px 10px;
  position: relative;
}

.menu {
  margin: 0px 0px 0px 10px;
  background-color: rgba(var(--peace), 100%);
  padding: 10px 10px;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  border: 3px solid rgba(var(--primary-bg), 100%);
  box-shadow: 7px 10px 45px 0px rgba(var(--primary-2), 40%);
  overflow-y: auto;
  z-index: 2;
}

.menu button {
  font-size: var(--primary-button-size);
  color: rgba(var(--primary-2), 100%);
  background-color: transparent;
  border: none;
  padding: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 8px;
  cursor: pointer;
  position: relative;
  transition: all 0.3s;
}

.menu button:hover {
  background-color: rgba(var(--primary-bg), 100%);
  color: rgba(var(--log), 100%);
}

.menu .active {
  /* background-color: transparent !important; */
  /* color: #272727 !important; */
}

.menu .active .indicator {
  width: 3px;
  background-color: rgba(var(--primary), 100%);
  height: 30px;
  border-radius: 5px;
  justify-self: left;
  position: absolute;
  left: -15px;
  box-shadow: 3px 1px 13px 1px rgba(var(--primary), 100%);
  transition: all 0.5s;
}

.menu .active:hover .indicator {
  left: -8px;
  box-shadow: 0px 0px 0px 0px inset !important;
}

.menu hr {
  border: 0px;
  width: 80%;
  border-bottom: 1px solid rgba(var(--primary-2), 40%);
  border-radius: 3px;
}

.menu .options,
.active-logs {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.menu::-webkit-scrollbar {
  display: none;
  width: 2px;
  border-radius: 10px;
}

.menu::-webkit-scrollbar-track {
  border-radius: 10px;
  background: rgba(var(--primary-2), 0%);
  margin: 12px 0px;
}

.menu::-webkit-scrollbar-track:hover {
  background: rgba(var(--primary-2), 0%);
}

.menu::-webkit-scrollbar-thumb {
  background: rgba(var(--primary-2), 10%);
  border-radius: 10px;
}

.menu::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--primary-2), 50%);
}

.console-group {
  display: flex;
  flex-direction: column;
  flex: 1;
  gap: 15px;
}

.logs_conatiner {
  overflow-y: auto;
  overflow-x: hidden;
  height: 100%;
  /* padding-right: 10px; */
}

.logs_conatiner::-webkit-scrollbar {
  width: 15px;
  border-radius: 0px;
}

.logs_conatiner::-webkit-scrollbar-track {
  border-radius: 0px;
  background: rgba(var(--primary-bg), 100%);
  margin: 0px 0px 0px 0px;
  border-left: 10px solid rgba(var(--peace), 1000%);
}

.logs_conatiner::-webkit-scrollbar-track:hover {
  background: rgba(var(--primary-bg), 100%);
}

.logs_conatiner::-webkit-scrollbar-thumb {
  background: rgba(var(--primary-2), 30%);
  border-radius: 0px;
  border-left: 10px solid rgba(var(--peace), 100%);
}

.logs_conatiner::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--primary-2), 100%);
}

.logs {
  display: flex;
  gap: 10px;
  flex-direction: column;
}

.output {
  display: flex;
  color: rgba(var(--peace), 100%);
  border-radius: 5px;
  overflow: hidden;
  background-color: rgba(var(--primary-bg), 100%);
  font-size: var(--primary-font-size);
}

.output .heading {
  padding: 10px 20px;
  background-color: rgba(var(--log), 100%);
  padding-top: 12.5px;
}

.output .text {
  padding: 10px 20px;
  display: flex;
  justify-content: space-between;
  border: 3px solid rgb(var(--primary-2), 0.05);
  flex: 1;
  color: rgba(var(--primary-2), 100%);
}

/* input promt style start here */

.input-animation {
  --input-animation-name: blinking;
  animation-name: var(--input-animation-name);
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-duration: 0.3s;
  animation-direction: alternate;
}

@keyframes blinking {
  0% {
    filter: grayscale(0);
  }
  100% {
    filter: grayscale(0.5);
  }
}

.input .text {
  padding: 0;
}

.input .info {
  margin: 0px 15px;
  color: rgba(var(--input), 100%);
}

.input .log-input {
  border: none;
  flex: 1;
  padding: 0px 17px 0px 17px;
  margin: 1px 1px 1px 2px;
  border-radius: 0px 5px 5px 0px;
  font-size: var(--primary-font-size);
  color: rgba(var(--primary-2), 100%);
  font-weight: 500;
  outline: none;
}

.input .heading {
  background-color: rgba(var(--input), 100%);
}

.input input:focus-visible {
}

.input .log-count {
  display: block;
  min-width: 40px;
  text-align: center;
}

.input .log-input[name="finished"] {
  pointer-events: none;
}

.input .info .info-keyboard {
  --input-animation-name: keyboardBlinking;
  animation-name: var(--input-animation-name);
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-duration: 0.3s;
  animation-direction: alternate;
}

@keyframes keyboardBlinking {
  0% {
    color: rgba(var(--input), 100%);
  }
  100% {
    color: rgba(var(--primary-dark), 100%);
  }
}

.inputFinished .info #info-keyboard {
  color: rgba(var(--primary-2), 100%);
}

/* input promt style end here */

.error {
  background-color: rgba(var(--error), 0.17);
}

.error .heading {
  background-color: rgba(var(--error), 100%);
}

.warn {
  background-color: rgba(var(--warn), 0.17);
}

.warn .heading {
  background-color: rgba(var(--warn), 100%);
}

.debug {
  background-color: rgba(var(--debug), 0.17);
}

.debug .heading {
  background-color: rgba(var(--debug), 100%);
}

/* Here designing tool tip for the application  */
[data-title]:hover:after {
  opacity: 1;
  transition: all 0.1s ease 0.5s;
  visibility: visible;
}
[data-title]:after {
  content: attr(data-title);
  background-color: #00ff00;
  color: #111;
  font-size: 12px;
  position: absolute;
  padding: 1px 5px 2px 5px;
  bottom: -1.6em;
  /* left: 100%; */
  white-space: nowrap;
  box-shadow: 1px 1px 3px #222222;
  opacity: 0;
  border: 1px solid #111111;
  z-index: 99999;
  visibility: hidden;
}
[data-title] {
  position: relative;
}

/* here creating blink effect for elements */
.blink {
  animation-name: blink-effect;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
  animation-direction: alternate;
  --low-opacity: 0.8;
}

@keyframes blink-effect {
  0% {
    opacity: var(--low-opacity);
  }
  10% {
    opacity: 1;
  }
  20% {
    opacity: var(--low-opacity);
  }
  30% {
    opacity: 1;
  }
  40% {
    opacity: var(--low-opacity);
  }
  50% {
    opacity: 1;
  }
  60% {
    opacity: var(--low-opacity);
  }
  70% {
    opacity: 1;
  }
  80% {
    opacity: var(--low-opacity);
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: var(--low-opacity);
  }
  100% {
    opacity: 1;
  }
}

.output .force {
  display: none;
}

.blink .force {
  display: inline-block;
}

/* here designing log count's */
.info {
  display: flex;
  align-items: center;
  gap: 10px;
}

.log-type {
  display: none;
}

.log .log-type-log {
  display: block;
  color: rgba(var(--log), 100%);
}

.error .log-type-error {
  display: block;
  color: rgba(var(--error-light), 100%);
}

.warn .log-type-warn {
  display: block;
  color: rgba(var(--warn), 100%);
}

.debug .log-type-debug {
  display: block;
  color: rgba(var(--debug-light), 100%);
}

.log-count {
  display: none;
  font-size: 80%;
  padding: 2px 10px;
  font-weight: 700;
  background-color: rgba(var(--primary-2), 10%);
  border-radius: 4px;
  border: 1px solid rgb(var(--primary-2), 0.05);
}
